/**
 *
 * jQuery plugin to impliment RSA public key encryption for
 * form submissions.
 *
 * Utilizes the pidCrypt libraries for client public key
 * encryption while the associated PHP class uses
 * OpenSSL to generate the necessary private/public key pairs used
 * by this plug-in
 *
 * Fork me @ https://www.github.com/jas-/jQuery.pidCrypt
 *
 * REQUIREMENTS:
 * - jQuery libraries (required - http://www.jquery.com)
 * - pidCrypt RSA & AES libraries (required - https://www.pidder.com/pidcrypt/)
 * - jQuery cookie plugin (optional - http://plugins.jquery.com/files/jquery.cookie.js.txt)
 *
 * FEATURES:
 * - HTML5 localStorage support
 * - HTML5 sessionStorage support
 * - Cookie support
 *
 * OPTIONS:
 * - storage: HTML5 localStorage, sessionStorage and cookies supported
 * - callback: Optional function used once server recieves encrypted data
 *
 * USAGE:
 * - Default usage using HTML5 localStorage
 * $('#form').pidCrypt();
 *
 * - Using HTML5 sessionStorage
 * $('#form').pidCrypt({storage:'sessionStorage'});
 *
 * - Using cookies (requires the jQuery cookie plug-in)
 * $('#form').pidCrypt({storage:'cookie'});
 *
 * - Example of using the callback method to process server response
 * $('#form').pidCrypt({callback:function(){ console.log('foo'); }});
 *
 * Author: Jason Gerfen <jason.gerfen@gmail.com>
 * License: GPL
 *
 */

(function(d){d.fn.pidCrypt=function(h){var i={init:function(a){var b={storage:"localStorage",form:d(this).attr("id"),proxy:d(this).attr("action"),type:d(this).attr("method"),aes:new pidCrypt.AES.CBC,callback:function(){}},c=d.extend({},b,a);n(c)&&(o(c),p(c),d("#"+c.form).live("submit",function(a){a.preventDefault();q(c)}));return!0}},q=function(a){d.ajax({data:r(a,s(a)),type:a.type,url:a.proxy,success:function(b){a.callback&&d.isFunction(a.callback)&&a.callback.call(b)}});return!1},r=function(a,b){var c=
{},e=t(a.aes.decryptText(g(a.storage,"pub"),g(a.storage,"uuid"),{nBits:256,salt:g(a.storage,"iv")}));u(a,e);v(b)>0?d.each(b,function(a,b){typeof b==="object"?(c[a]={},d.each(b,function(b,e){c[a][b]=pidCrypt.RSA.prototype.encrypt(e)})):c[a]=pidCrypt.RSA.prototype.encrypt(b)}):c=0;return c},u=function(a,b){if(b.b64){var c=pidCryptUtil.decodeBase64(b.b64),e=new pidCrypt,c=pidCrypt.ASN1.decode(pidCryptUtil.toByteArray(c)).toHexTree();pidCrypt.RSA.prototype.setPublicKeyFromASN(c)}return e},l=function(a){var b=
"0123456789abcdef".split(""),c=[],e=Math.random,d;c[8]=c[13]=c[18]=c[23]="-";c[14]="4";for(var f=0;f<36;f++)c[f]||(d=0|e()*16,c[f]=b[f==19?d&3|8:d&15]);return a!==null?c.join("").replace(/-/g,"").split("",a).join(""):c.join("")},o=function(a){g(a.storage,"uuid")?g(a.storage,"uuid"):j(a.storage,"uuid",l(null));g(a.storage,"iv")?g(a.storage,"iv"):j(a.storage,"iv",l(16))},p=function(a){g(a.storage,"pub")?g(a.storage,"pub"):w(a)},w=function(a){d.ajax({data:"ssl-key=true&key="+g(a.storage,"uuid")+"&x="+
g(a.storage,"iv"),type:"post",url:a.proxy,success:function(b){j(a.storage,"pub",a.aes.encryptText(b,g(a.storage,"uuid"),{nBits:256,salt:g(a.storage,"iv")}))}});return!1},s=function(a){var b={};d.each(d("#"+a.form+" :text, :password, :file, input:hidden, input:checkbox:checked, input:radio:checked, textarea"),function(a,e){if(!(e.value===!1||e.value.length===0||!e.value||e.value===null||e.value===""||typeof e.value==="undefined")){var d=e.name,f;if(parseInt(e.value.length)>80){f=e.value;for(var g=
f.length/80,h={},i=0,j=80,k=0;k<g;k++)k>0&&(i+=80,j+=80),f.slice(i,j).length>0&&(h[k]=f.slice(i,j));f=h}else f=e.value;b[d]=f}});return b},v=function(a){var b=0;d.each(a,function(c){a.hasOwnProperty(c)&&b++});return b},j=function(a,b,c){var e=!1,a=m(a)?a:"cookie";switch(a){case "localStorage":e=localStorage.setItem(b,c)?!1:!0;break;case "sessionStorage":e=sessionStorage.setItem(b,c)?!1:!0;break;case "cookie":e=typeof d.cookie==="function"?d.cookie(b,c,{expires:7})?!0:!1:!1;break;default:e=localStorage.setItem(b,
c)?!1:!0}return e},g=function(a,b){var c=!1,a=m(a)?a:"cookie";switch(a){case "localStorage":c=localStorage.getItem(b)?localStorage.getItem(b):!1;break;case "sessionStorage":c=sessionStorage.getItem(b)?sessionStorage.getItem(b):!1;break;case "cookie":c=typeof d.cookie==="function"?d.cookie(b)?d.cookie(b):!1:!1;break;default:c=localStorage.getItem(b)?localStorage.getItem(b):!1}return c},m=function(a){try{return a in window&&window[a]?!0:!1}catch(b){return!1}},t=function(a){for(var a=a.split("\n"),b=
!1,c=!1,e="",d={info:"",salt:"",b64:"",aes:!1,mode:"",bits:0},f=0;f<a.length;f++)switch(e=a[f].substr(0,9),f==1&&e!="Proc-Type"&&e.indexOf("M")==0&&(c=!0),e){case "-----BEGI":b=!0;break;case "Proc-Type":if(b)d.info=a[f];break;case "DEK-Info:":if(b){var e=a[f].split(","),g=e[0].split(": ")[1].split("-");d.aes=g[0]=="AES"?!0:!1;d.mode=g[2];d.bits=parseInt(g[1]);d.salt=e[1].substr(0,16);d.iv=e[1]}break;case "":b&&(c=!0);break;case "-----END ":b&&(b=c=!1);break;default:b&&c&&(d.b64+=pidCryptUtil.stripLineFeeds(a[f]))}return d},
n=function(a){var b=!0;d.isFunction(pidCrypt.RSA.prototype.encrypt)||(console.log("pidCrypt RSA libraries are missing. Please include the pidCrypt RSA libs..."),console.log("Download them from https://www.pidder.com/pidcrypt/"),console.log("See README document for necessary includes"),b=!1);d.isFunction(pidCrypt.AES.CBC)||(console.log("pidCrypt AES-CBC libraries are missing. Please include the pidCrypt AES-CBC libs..."),console.log("Download them from https://www.pidder.com/pidcrypt/"),console.log("See README document for necessary includes"),
b=!1);a.storage==="cookie"&&!d.isFunction(d.cookie)&&(console.log("Cookie use specified but required libraries not available. Please include the jQuery cookie plugin..."),console.log("Download it from https://github.com/carhartl/jquery-cookie"),b=!1);return b};if(i[h])return i[h].apply(this,Array.prototype.slice.call(arguments,1));else if(typeof h==="object"||!h)return i.init.apply(this,arguments);else console.log("Method "+h+" does not exist")}})(jQuery);
